version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: trackerdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python -m app.db.create_tables && python run_backend.py"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+psycopg://postgres:1234@db:5432/trackerdb

    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    command: python run_bot.py
    volumes:
      - ./bot:/app
    environment:
      - BACKEND_URL_FOR_BOT=http://backend:8000
    depends_on:
      - backend
    networks:
      - app-network

  web:
    build:
      context: ./web/my-admin-panel
      dockerfile: Dockerfile
    volumes:
      - ./web/my-admin-panel:/app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://127.0.0.1:8000
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: